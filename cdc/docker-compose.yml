version: '3'
services:
  # Zookeeper service
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - my-network

  # Kafka service
  kafka:
    image: wurstmeister/kafka
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
    depends_on:
      - zookeeper
    networks:
      - my-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local-kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka
    networks:
      - my-network

  # Kafka Connect service with Debezium
  connect:
    image: debezium/connect:latest
    ports:
      - "8083:8083"
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      CONNECT_REST_ADVERTISED_HOST_NAME: "localhost"
      CONNECT_GROUP_ID: "connect-cluster"
      CONFIG_STORAGE_TOPIC: 'my_connect_configs'
      OFFSET_STORAGE_TOPIC: 'my_connect_offsets'
      STATUS_STORAGE_TOPIC: 'my_connect_statuses'
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      PLUGIN_PATH: '/kafka/connect'
    depends_on:
      - kafka
    networks:
      - my-network
    # volumes:
    # - ./clickhouse-kafka-connect-v1.1.0-confluent.jar:/kafka/connect/clickhouse-kafka-connect-v1.1.0-confluent.jar

  # PostgreSQL service
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: debezium
      POSTGRES_PASSWORD: debezium
    ports:
      - "5432:5432"
    volumes:
      - ./init_postgres.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - my-network

  # ClickHouse service
  clickhouse-server:
    image: clickhouse/clickhouse-server
    ports:
      - "8123:8123"
      - "8443:8443"
      - "9000:9000"
    networks:
      - my-network

networks:
  my-network:
    driver: bridge